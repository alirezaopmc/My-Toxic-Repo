module bcd_to_seven_segment (
    bcd,
    seven_segment
);

input [3:0] bcd;
output reg [6:0] seven_segment;

always@ (bcd)
begin
    case(bcd)
    0: seven_segment = 7'b1111110;
    1: seven_segment = 7'b0110000;
    2: seven_segment = 7'b1101101;
    3: seven_segment = 7'b1111001;
    4: seven_segment = 7'b0110011;
    5: seven_segment = 7'b1011011;
    6: seven_segment = 7'b1011111;
    7: seven_segment = 7'b1110000;
    8: seven_segment = 7'b1111111;
    9: seven_segment = 7'b1111011;
    default: seven_segment = 7'bx;
    endcase
end

endmodule



module bcd_test();

reg [3:0] bcd;
wire [6:0] seven_segment;

bcd_to_seven_segment test(bcd, seven_segment);

initial begin

@monitor("Bcd = %d, Seg = %b", bcd, seven_segment);

bcd = 4'd1;
#5 bcd = 4'd2;
#5 bcd = 4'd8;
#5 bcd = 4'd9;

end
endmodule